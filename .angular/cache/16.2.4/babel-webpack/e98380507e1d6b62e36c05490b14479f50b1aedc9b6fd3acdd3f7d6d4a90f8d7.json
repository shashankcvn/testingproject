{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/appServices/design-utility.service\";\nimport * as i2 from \"primeng/splitbutton\";\nexport class LogInComponent {\n  constructor(_msgService) {\n    this._msgService = _msgService;\n    this.employee = [{\n      emp_id: 101,\n      name: \"shashank\",\n      email: \"shashankcvn@gmail.com\"\n    }, {\n      emp_id: 102,\n      name: \"Rushi\",\n      email: \"rushi@gmail.com\"\n    }, {\n      emp_id: 103,\n      name: \"kaustubh\",\n      email: \"kausti41@gmail.com\"\n    }];\n    // Product ={id : \"1\",name: \"TV\"};\n    this.myvalue = \"ux\";\n    this.userName = \"uxtrend\";\n    this._msgService.userName.subscribe(uname => this.userName = uname);\n  }\n  ngOnInit() {\n    // this.Product =this._msgService.Product\n  }\n  btnClick() {\n    this._msgService.submit();\n  }\n  UpdateName(uname) {\n    // this.userName = uname.value\n    this._msgService.userName.next(uname.value);\n  }\n  static #_ = this.ɵfac = function LogInComponent_Factory(t) {\n    return new (t || LogInComponent)(i0.ɵɵdirectiveInject(i1.DesignUtilityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LogInComponent,\n    selectors: [[\"app-log-in\"]],\n    inputs: {\n      myvalue: \"myvalue\"\n    },\n    decls: 13,\n    vars: 1,\n    consts: [[1, \"ui-g\", \"ui-fluid\"], [1, \"ui-g-12\", \"ui-md-4\"], [1, \"ui-inputgroup\"], [1, \"ui-inputgroup-addon\"], [1, \"pi\", \"pi-user\", 2, \"line-height\", \"1.25\"], [\"type\", \"text\", \"pInputText\", \"\", \"placeholder\", \"Username\"], [\"uname\", \"\"], [\"label\", \"Save\", \"icon\", \"pi pi-file\", \"styleClass\", \"ui-button-success\", 3, \"click\"]],\n    template: function LogInComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵtext(0, \"userName is :\");\n        i0.ɵɵelementStart(1, \"strong\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"br\");\n        i0.ɵɵelementStart(4, \"div\", 0)(5, \"div\", 1)(6, \"div\", 2)(7, \"span\", 3);\n        i0.ɵɵelement(8, \"i\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(9, \"input\", 5, 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"br\");\n        i0.ɵɵelementStart(12, \"p-splitButton\", 7);\n        i0.ɵɵlistener(\"click\", function LogInComponent_Template_p_splitButton_click_12_listener() {\n          i0.ɵɵrestoreView(_r1);\n          const _r0 = i0.ɵɵreference(10);\n          return i0.ɵɵresetView(ctx.UpdateName(_r0));\n        });\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.userName);\n      }\n    },\n    dependencies: [i2.SplitButton],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["LogInComponent","constructor","_msgService","employee","emp_id","name","email","myvalue","userName","subscribe","uname","ngOnInit","btnClick","submit","UpdateName","next","value","_","i0","ɵɵdirectiveInject","i1","DesignUtilityService","_2","selectors","inputs","decls","vars","consts","template","LogInComponent_Template","rf","ctx","ɵɵtext","ɵɵelementStart","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LogInComponent_Template_p_splitButton_click_12_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\shashank\\firstapp\\src\\app\\Mycomponents\\log-in\\log-in.component.ts","C:\\Users\\shashank\\firstapp\\src\\app\\Mycomponents\\log-in\\log-in.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { DesignUtilityService } from 'src/app/appServices/design-utility.service';\n\n@Component({\n  selector: 'app-log-in',\n  templateUrl: './log-in.component.html',\n  styleUrls: ['./log-in.component.css']\n})\nexport class LogInComponent {\n    \n  constructor (private _msgService: DesignUtilityService){\n    \n\n    this._msgService.userName.subscribe(uname => this.userName = uname)\n  }\n  ngOnInit(){\n    \n    // this.Product =this._msgService.Product\n\n  }\n\n  employee = [{emp_id :101,name:\"shashank\",email:\"shashankcvn@gmail.com\"},\n                      {emp_id: 102,name:\"Rushi\",email:\"rushi@gmail.com\"},\n                      {emp_id :103,name:\"kaustubh\",email:\"kausti41@gmail.com\"}]\n\n\n\n                    \nbtnClick(){\n this._msgService.submit()\n}\n \n// Product ={id : \"1\",name: \"TV\"};\n\n @Input()  myvalue = \"ux\"\n\n\n userName :string = \"uxtrend\"\n\n UpdateName(uname : any){\n  // this.userName = uname.value\n\nthis._msgService.userName.next(uname.value)\n}\n}\n","userName is :<strong>{{userName}}</strong><br>\n\n<div class=\"ui-g ui-fluid\">\n    <div class=\"ui-g-12 ui-md-4\">\n        <div class=\"ui-inputgroup\">\n            <span class=\"ui-inputgroup-addon\"><i class=\"pi pi-user\" style=\"line-height: 1.25;\"></i></span>\n            <input type=\"text\" pInputText placeholder=\"Username\" #uname>         \n        </div><br>\n  \n  \n        <p-splitButton label=\"Save\" icon=\"pi pi-file\"  styleClass=\"ui-button-success\" (click)=\"UpdateName(uname)\"></p-splitButton>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<!-- product ID: <strong class=\"text-success\">{{Product.id}}</strong>\nproduct name: <strong class=\"text-success\">{{Product.name}}</strong><br><br> -->\n<!-- <button (click)=\"btnClick()\">submit</button> -->\n"],"mappings":";;;AAQA,OAAM,MAAOA,cAAc;EAEzBC,YAAqBC,WAAiC;IAAjC,KAAAA,WAAW,GAAXA,WAAW;IAWhC,KAAAC,QAAQ,GAAG,CAAC;MAACC,MAAM,EAAE,GAAG;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAC;IAAuB,CAAC,EACnD;MAACF,MAAM,EAAE,GAAG;MAACC,IAAI,EAAC,OAAO;MAACC,KAAK,EAAC;IAAiB,CAAC,EAClD;MAACF,MAAM,EAAE,GAAG;MAACC,IAAI,EAAC,UAAU;MAACC,KAAK,EAAC;IAAoB,CAAC,CAAC;IAS/E;IAEW,KAAAC,OAAO,GAAG,IAAI;IAGxB,KAAAC,QAAQ,GAAW,SAAS;IAxBzB,IAAI,CAACN,WAAW,CAACM,QAAQ,CAACC,SAAS,CAACC,KAAK,IAAI,IAAI,CAACF,QAAQ,GAAGE,KAAK,CAAC;EACrE;EACAC,QAAQA,CAAA;IAEN;EAAA;EAWJC,QAAQA,CAAA;IACP,IAAI,CAACV,WAAW,CAACW,MAAM,EAAE;EAC1B;EASCC,UAAUA,CAACJ,KAAW;IACrB;IAEF,IAAI,CAACR,WAAW,CAACM,QAAQ,CAACO,IAAI,CAACL,KAAK,CAACM,KAAK,CAAC;EAC3C;EAAC,QAAAC,CAAA,G;qBAnCYjB,cAAc,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,oBAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdtB,cAAc;IAAAuB,SAAA;IAAAC,MAAA;MAAAjB,OAAA;IAAA;IAAAkB,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;;QCR3BZ,EAAA,CAAAc,MAAA,oBAAa;QAAAd,EAAA,CAAAe,cAAA,aAAQ;QAAAf,EAAA,CAAAc,MAAA,GAAY;QAAAd,EAAA,CAAAgB,YAAA,EAAS;QAAAhB,EAAA,CAAAiB,SAAA,SAAI;QAE9CjB,EAAA,CAAAe,cAAA,aAA2B;QAGmBf,EAAA,CAAAiB,SAAA,WAAqD;QAAAjB,EAAA,CAAAgB,YAAA,EAAO;QAC9FhB,EAAA,CAAAiB,SAAA,kBAA4D;QAChEjB,EAAA,CAAAgB,YAAA,EAAM;QAAAhB,EAAA,CAAAiB,SAAA,UAAI;QAGVjB,EAAA,CAAAe,cAAA,wBAA0G;QAA5Bf,EAAA,CAAAkB,UAAA,mBAAAC,wDAAA;UAAAnB,EAAA,CAAAoB,aAAA,CAAAC,GAAA;UAAA,MAAAC,GAAA,GAAAtB,EAAA,CAAAuB,WAAA;UAAA,OAASvB,EAAA,CAAAwB,WAAA,CAAAX,GAAA,CAAAjB,UAAA,CAAA0B,GAAA,CAAiB;QAAA,EAAC;QAACtB,EAAA,CAAAgB,YAAA,EAAgB;;;QAV7GhB,EAAA,CAAAyB,SAAA,GAAY;QAAZzB,EAAA,CAAA0B,iBAAA,CAAAb,GAAA,CAAAvB,QAAA,CAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}