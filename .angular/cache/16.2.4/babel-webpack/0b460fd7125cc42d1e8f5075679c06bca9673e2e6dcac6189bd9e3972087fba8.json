{"ast":null,"code":"/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n  static addClass(element, className) {\n    if (element.classList) element.classList.add(className);else element.className += ' ' + className;\n  }\n  static addMultipleClasses(element, className) {\n    if (element.classList) {\n      let styles = className.trim().split(' ');\n      for (let i = 0; i < styles.length; i++) {\n        element.classList.add(styles[i]);\n      }\n    } else {\n      let styles = className.split(' ');\n      for (let i = 0; i < styles.length; i++) {\n        element.className += ' ' + styles[i];\n      }\n    }\n  }\n  static removeClass(element, className) {\n    if (element.classList) element.classList.remove(className);else element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n  }\n  static hasClass(element, className) {\n    if (element.classList) return element.classList.contains(className);else return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n  }\n  static siblings(element) {\n    return Array.prototype.filter.call(element.parentNode.children, function (child) {\n      return child !== element;\n    });\n  }\n  static find(element, selector) {\n    return Array.from(element.querySelectorAll(selector));\n  }\n  static findSingle(element, selector) {\n    if (element) {\n      return element.querySelector(selector);\n    }\n    return null;\n  }\n  static index(element) {\n    let children = element.parentNode.childNodes;\n    let num = 0;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].nodeType == 1) num++;\n    }\n    return -1;\n  }\n  static indexWithinGroup(element, attributeName) {\n    let children = element.parentNode ? element.parentNode.childNodes : [];\n    let num = 0;\n    for (var i = 0; i < children.length; i++) {\n      if (children[i] == element) return num;\n      if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1) num++;\n    }\n    return -1;\n  }\n  static relativePosition(element, target) {\n    let elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    const targetHeight = target.offsetHeight;\n    const targetOffset = target.getBoundingClientRect();\n    const viewport = this.getViewport();\n    let top, left;\n    if (targetOffset.top + targetHeight + elementDimensions.height > viewport.height) {\n      top = -1 * elementDimensions.height;\n      element.style.transformOrigin = 'bottom';\n      if (targetOffset.top + top < 0) {\n        top = -1 * targetOffset.top;\n      }\n    } else {\n      top = targetHeight;\n      element.style.transformOrigin = 'top';\n    }\n    if (elementDimensions.width > viewport.width) {\n      // element wider then viewport and cannot fit on screen (align at left side of viewport)\n      left = targetOffset.left * -1;\n    } else if (targetOffset.left + elementDimensions.width > viewport.width) {\n      // element wider then viewport but can be fit on screen (align at right side of viewport)\n      left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n    } else {\n      // element fits on screen (align with target)\n      left = 0;\n    }\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n  static absolutePosition(element, target) {\n    let elementDimensions = element.offsetParent ? {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    } : this.getHiddenElementDimensions(element);\n    let elementOuterHeight = elementDimensions.height;\n    let elementOuterWidth = elementDimensions.width;\n    let targetOuterHeight = target.offsetHeight;\n    let targetOuterWidth = target.offsetWidth;\n    let targetOffset = target.getBoundingClientRect();\n    let windowScrollTop = this.getWindowScrollTop();\n    let windowScrollLeft = this.getWindowScrollLeft();\n    let viewport = this.getViewport();\n    let top, left;\n    if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n      top = targetOffset.top + windowScrollTop - elementOuterHeight;\n      element.style.transformOrigin = 'bottom';\n      if (top < 0) {\n        top = windowScrollTop;\n      }\n    } else {\n      top = targetOuterHeight + targetOffset.top + windowScrollTop;\n      element.style.transformOrigin = 'top';\n    }\n    if (targetOffset.left + elementOuterWidth > viewport.width) left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);else left = targetOffset.left + windowScrollLeft;\n    element.style.top = top + 'px';\n    element.style.left = left + 'px';\n  }\n  static getParents(element, parents = []) {\n    return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n  }\n  static getScrollableParents(element) {\n    let scrollableParents = [];\n    if (element) {\n      let parents = this.getParents(element);\n      const overflowRegex = /(auto|scroll)/;\n      const overflowCheck = node => {\n        let styleDeclaration = window['getComputedStyle'](node, null);\n        return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n      };\n      for (let parent of parents) {\n        let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n        if (scrollSelectors) {\n          let selectors = scrollSelectors.split(',');\n          for (let selector of selectors) {\n            let el = this.findSingle(parent, selector);\n            if (el && overflowCheck(el)) {\n              scrollableParents.push(el);\n            }\n          }\n        }\n        if (parent.nodeType !== 9 && overflowCheck(parent)) {\n          scrollableParents.push(parent);\n        }\n      }\n    }\n    return scrollableParents;\n  }\n  static getHiddenElementOuterHeight(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementHeight = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementHeight;\n  }\n  static getHiddenElementOuterWidth(element) {\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    let elementWidth = element.offsetWidth;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return elementWidth;\n  }\n  static getHiddenElementDimensions(element) {\n    let dimensions = {};\n    element.style.visibility = 'hidden';\n    element.style.display = 'block';\n    dimensions.width = element.offsetWidth;\n    dimensions.height = element.offsetHeight;\n    element.style.display = 'none';\n    element.style.visibility = 'visible';\n    return dimensions;\n  }\n  static scrollInView(container, item) {\n    let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n    let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n    let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n    let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n    let containerRect = container.getBoundingClientRect();\n    let itemRect = item.getBoundingClientRect();\n    let offset = itemRect.top + document.body.scrollTop - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n    let scroll = container.scrollTop;\n    let elementHeight = container.clientHeight;\n    let itemHeight = this.getOuterHeight(item);\n    if (offset < 0) {\n      container.scrollTop = scroll + offset;\n    } else if (offset + itemHeight > elementHeight) {\n      container.scrollTop = scroll + offset - elementHeight + itemHeight;\n    }\n  }\n  static fadeIn(element, duration) {\n    element.style.opacity = 0;\n    let last = +new Date();\n    let opacity = 0;\n    let tick = function () {\n      opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n      element.style.opacity = opacity;\n      last = +new Date();\n      if (+opacity < 1) {\n        window.requestAnimationFrame && requestAnimationFrame(tick) || setTimeout(tick, 16);\n      }\n    };\n    tick();\n  }\n  static fadeOut(element, ms) {\n    var opacity = 1,\n      interval = 50,\n      duration = ms,\n      gap = interval / duration;\n    let fading = setInterval(() => {\n      opacity = opacity - gap;\n      if (opacity <= 0) {\n        opacity = 0;\n        clearInterval(fading);\n      }\n      element.style.opacity = opacity;\n    }, interval);\n  }\n  static getWindowScrollTop() {\n    let doc = document.documentElement;\n    return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n  }\n  static getWindowScrollLeft() {\n    let doc = document.documentElement;\n    return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n  }\n  static matches(element, selector) {\n    var p = Element.prototype;\n    var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n      return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n    };\n    return f.call(element, selector);\n  }\n  static getOuterWidth(el, margin) {\n    let width = el.offsetWidth;\n    if (margin) {\n      let style = getComputedStyle(el);\n      width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    return width;\n  }\n  static getHorizontalPadding(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n  }\n  static getHorizontalMargin(el) {\n    let style = getComputedStyle(el);\n    return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n  }\n  static innerWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n  static width(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    return width;\n  }\n  static getInnerHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n    return height;\n  }\n  static getOuterHeight(el, margin) {\n    let height = el.offsetHeight;\n    if (margin) {\n      let style = getComputedStyle(el);\n      height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n    }\n    return height;\n  }\n  static getHeight(el) {\n    let height = el.offsetHeight;\n    let style = getComputedStyle(el);\n    height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n    return height;\n  }\n  static getWidth(el) {\n    let width = el.offsetWidth;\n    let style = getComputedStyle(el);\n    width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n    return width;\n  }\n  static getViewport() {\n    let win = window,\n      d = document,\n      e = d.documentElement,\n      g = d.getElementsByTagName('body')[0],\n      w = win.innerWidth || e.clientWidth || g.clientWidth,\n      h = win.innerHeight || e.clientHeight || g.clientHeight;\n    return {\n      width: w,\n      height: h\n    };\n  }\n  static getOffset(el) {\n    var rect = el.getBoundingClientRect();\n    return {\n      top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n      left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0)\n    };\n  }\n  static replaceElementWith(element, replacementElement) {\n    let parentNode = element.parentNode;\n    if (!parentNode) throw `Can't replace element`;\n    return parentNode.replaceChild(replacementElement, element);\n  }\n  static getUserAgent() {\n    return navigator.userAgent;\n  }\n  static isIE() {\n    var ua = window.navigator.userAgent;\n    var msie = ua.indexOf('MSIE ');\n    if (msie > 0) {\n      // IE 10 or older => return version number\n      return true;\n    }\n    var trident = ua.indexOf('Trident/');\n    if (trident > 0) {\n      // IE 11 => return version number\n      var rv = ua.indexOf('rv:');\n      return true;\n    }\n    var edge = ua.indexOf('Edge/');\n    if (edge > 0) {\n      // Edge (IE 12+) => return version number\n      return true;\n    }\n    // other browser\n    return false;\n  }\n  static isIOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n  }\n  static isAndroid() {\n    return /(android)/i.test(navigator.userAgent);\n  }\n  static appendChild(element, target) {\n    if (this.isElement(target)) target.appendChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.appendChild(element);else throw 'Cannot append ' + target + ' to ' + element;\n  }\n  static removeChild(element, target) {\n    if (this.isElement(target)) target.removeChild(element);else if (target.el && target.el.nativeElement) target.el.nativeElement.removeChild(element);else throw 'Cannot remove ' + element + ' from ' + target;\n  }\n  static removeElement(element) {\n    if (!('remove' in Element.prototype)) element.parentNode.removeChild(element);else element.remove();\n  }\n  static isElement(obj) {\n    return typeof HTMLElement === \"object\" ? obj instanceof HTMLElement : obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\";\n  }\n  static calculateScrollbarWidth(el) {\n    if (el) {\n      let style = getComputedStyle(el);\n      return el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth);\n    } else {\n      if (this.calculatedScrollbarWidth !== null) return this.calculatedScrollbarWidth;\n      let scrollDiv = document.createElement(\"div\");\n      scrollDiv.className = \"p-scrollbar-measure\";\n      document.body.appendChild(scrollDiv);\n      let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n      document.body.removeChild(scrollDiv);\n      this.calculatedScrollbarWidth = scrollbarWidth;\n      return scrollbarWidth;\n    }\n  }\n  static calculateScrollbarHeight() {\n    if (this.calculatedScrollbarHeight !== null) return this.calculatedScrollbarHeight;\n    let scrollDiv = document.createElement(\"div\");\n    scrollDiv.className = \"p-scrollbar-measure\";\n    document.body.appendChild(scrollDiv);\n    let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n    document.body.removeChild(scrollDiv);\n    this.calculatedScrollbarWidth = scrollbarHeight;\n    return scrollbarHeight;\n  }\n  static invokeElementMethod(element, methodName, args) {\n    element[methodName].apply(element, args);\n  }\n  static clearSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document['selection'] && document['selection'].empty) {\n      try {\n        document['selection'].empty();\n      } catch (error) {\n        //ignore IE bug\n      }\n    }\n  }\n  static getBrowser() {\n    if (!this.browser) {\n      let matched = this.resolveUserAgent();\n      this.browser = {};\n      if (matched.browser) {\n        this.browser[matched.browser] = true;\n        this.browser['version'] = matched.version;\n      }\n      if (this.browser['chrome']) {\n        this.browser['webkit'] = true;\n      } else if (this.browser['webkit']) {\n        this.browser['safari'] = true;\n      }\n    }\n    return this.browser;\n  }\n  static resolveUserAgent() {\n    let ua = navigator.userAgent.toLowerCase();\n    let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) || /(webkit)[ \\/]([\\w.]+)/.exec(ua) || /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) || /(msie) ([\\w.]+)/.exec(ua) || ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) || [];\n    return {\n      browser: match[1] || \"\",\n      version: match[2] || \"0\"\n    };\n  }\n  static isInteger(value) {\n    if (Number.isInteger) {\n      return Number.isInteger(value);\n    } else {\n      return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n    }\n  }\n  static isHidden(element) {\n    return element.offsetParent === null;\n  }\n  static getFocusableElements(element) {\n    let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])`);\n    let visibleFocusableElements = [];\n    for (let focusableElement of focusableElements) {\n      if (getComputedStyle(focusableElement).display != \"none\" && getComputedStyle(focusableElement).visibility != \"hidden\") visibleFocusableElements.push(focusableElement);\n    }\n    return visibleFocusableElements;\n  }\n  static generateZIndex() {\n    this.zindex = this.zindex || 999;\n    return ++this.zindex;\n  }\n}\nDomHandler.zindex = 1000;\nDomHandler.calculatedScrollbarWidth = null;\nDomHandler.calculatedScrollbarHeight = null;\nclass ConnectedOverlayScrollHandler {\n  constructor(element, listener = () => {}) {\n    this.element = element;\n    this.listener = listener;\n  }\n  bindScrollListener() {\n    this.scrollableParents = DomHandler.getScrollableParents(this.element);\n    for (let i = 0; i < this.scrollableParents.length; i++) {\n      this.scrollableParents[i].addEventListener('scroll', this.listener);\n    }\n  }\n  unbindScrollListener() {\n    if (this.scrollableParents) {\n      for (let i = 0; i < this.scrollableParents.length; i++) {\n        this.scrollableParents[i].removeEventListener('scroll', this.listener);\n      }\n    }\n  }\n  destroy() {\n    this.unbindScrollListener();\n    this.element = null;\n    this.listener = null;\n    this.scrollableParents = null;\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };","map":{"version":3,"names":["DomHandler","addClass","element","className","classList","add","addMultipleClasses","styles","trim","split","i","length","removeClass","remove","replace","RegExp","join","hasClass","contains","test","siblings","Array","prototype","filter","call","parentNode","children","child","find","selector","from","querySelectorAll","findSingle","querySelector","index","childNodes","num","nodeType","indexWithinGroup","attributeName","attributes","relativePosition","target","elementDimensions","offsetParent","width","offsetWidth","height","offsetHeight","getHiddenElementDimensions","targetHeight","targetOffset","getBoundingClientRect","viewport","getViewport","top","left","style","transformOrigin","absolutePosition","elementOuterHeight","elementOuterWidth","targetOuterHeight","targetOuterWidth","windowScrollTop","getWindowScrollTop","windowScrollLeft","getWindowScrollLeft","Math","max","getParents","parents","concat","getScrollableParents","scrollableParents","overflowRegex","overflowCheck","node","styleDeclaration","window","getPropertyValue","parent","scrollSelectors","dataset","selectors","el","push","getHiddenElementOuterHeight","visibility","display","elementHeight","getHiddenElementOuterWidth","elementWidth","dimensions","scrollInView","container","item","borderTopValue","getComputedStyle","borderTop","parseFloat","paddingTopValue","paddingTop","containerRect","itemRect","offset","document","body","scrollTop","scroll","clientHeight","itemHeight","getOuterHeight","fadeIn","duration","opacity","last","Date","tick","getTime","requestAnimationFrame","setTimeout","fadeOut","ms","interval","gap","fading","setInterval","clearInterval","doc","documentElement","pageYOffset","clientTop","pageXOffset","scrollLeft","clientLeft","matches","p","Element","f","webkitMatchesSelector","s","indexOf","getOuterWidth","margin","marginLeft","marginRight","getHorizontalPadding","paddingLeft","paddingRight","getHorizontalMargin","innerWidth","getInnerHeight","paddingBottom","marginTop","marginBottom","getHeight","borderTopWidth","borderBottomWidth","getWidth","borderLeftWidth","borderRightWidth","win","d","e","g","getElementsByTagName","w","clientWidth","h","innerHeight","getOffset","rect","replaceElementWith","replacementElement","replaceChild","getUserAgent","navigator","userAgent","isIE","ua","msie","trident","rv","edge","isIOS","isAndroid","appendChild","isElement","nativeElement","removeChild","removeElement","obj","HTMLElement","nodeName","calculateScrollbarWidth","calculatedScrollbarWidth","scrollDiv","createElement","scrollbarWidth","calculateScrollbarHeight","calculatedScrollbarHeight","scrollbarHeight","invokeElementMethod","methodName","args","apply","clearSelection","getSelection","empty","removeAllRanges","rangeCount","getRangeAt","getClientRects","error","getBrowser","browser","matched","resolveUserAgent","version","toLowerCase","match","exec","isInteger","value","Number","isFinite","floor","isHidden","getFocusableElements","focusableElements","visibleFocusableElements","focusableElement","generateZIndex","zindex","ConnectedOverlayScrollHandler","constructor","listener","bindScrollListener","addEventListener","unbindScrollListener","removeEventListener","destroy"],"sources":["C:/Users/shashank/firstapp/node_modules/primeng/fesm2015/primeng-dom.js"],"sourcesContent":["/**\n * @dynamic is for runtime initializing DomHandler.browser\n *\n * If delete below comment, we can see this error message:\n *  Metadata collected contains an error that will be reported at runtime:\n *  Only initialized variables and constants can be referenced\n *  because the value of this variable is needed by the template compiler.\n */\n// @dynamic\nclass DomHandler {\n    static addClass(element, className) {\n        if (element.classList)\n            element.classList.add(className);\n        else\n            element.className += ' ' + className;\n    }\n    static addMultipleClasses(element, className) {\n        if (element.classList) {\n            let styles = className.trim().split(' ');\n            for (let i = 0; i < styles.length; i++) {\n                element.classList.add(styles[i]);\n            }\n        }\n        else {\n            let styles = className.split(' ');\n            for (let i = 0; i < styles.length; i++) {\n                element.className += ' ' + styles[i];\n            }\n        }\n    }\n    static removeClass(element, className) {\n        if (element.classList)\n            element.classList.remove(className);\n        else\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n    static hasClass(element, className) {\n        if (element.classList)\n            return element.classList.contains(className);\n        else\n            return new RegExp('(^| )' + className + '( |$)', 'gi').test(element.className);\n    }\n    static siblings(element) {\n        return Array.prototype.filter.call(element.parentNode.children, function (child) {\n            return child !== element;\n        });\n    }\n    static find(element, selector) {\n        return Array.from(element.querySelectorAll(selector));\n    }\n    static findSingle(element, selector) {\n        if (element) {\n            return element.querySelector(selector);\n        }\n        return null;\n    }\n    static index(element) {\n        let children = element.parentNode.childNodes;\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static indexWithinGroup(element, attributeName) {\n        let children = element.parentNode ? element.parentNode.childNodes : [];\n        let num = 0;\n        for (var i = 0; i < children.length; i++) {\n            if (children[i] == element)\n                return num;\n            if (children[i].attributes && children[i].attributes[attributeName] && children[i].nodeType == 1)\n                num++;\n        }\n        return -1;\n    }\n    static relativePosition(element, target) {\n        let elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        const targetHeight = target.offsetHeight;\n        const targetOffset = target.getBoundingClientRect();\n        const viewport = this.getViewport();\n        let top, left;\n        if ((targetOffset.top + targetHeight + elementDimensions.height) > viewport.height) {\n            top = -1 * (elementDimensions.height);\n            element.style.transformOrigin = 'bottom';\n            if (targetOffset.top + top < 0) {\n                top = -1 * targetOffset.top;\n            }\n        }\n        else {\n            top = targetHeight;\n            element.style.transformOrigin = 'top';\n        }\n        if (elementDimensions.width > viewport.width) {\n            // element wider then viewport and cannot fit on screen (align at left side of viewport)\n            left = targetOffset.left * -1;\n        }\n        else if ((targetOffset.left + elementDimensions.width) > viewport.width) {\n            // element wider then viewport but can be fit on screen (align at right side of viewport)\n            left = (targetOffset.left + elementDimensions.width - viewport.width) * -1;\n        }\n        else {\n            // element fits on screen (align with target)\n            left = 0;\n        }\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static absolutePosition(element, target) {\n        let elementDimensions = element.offsetParent ? { width: element.offsetWidth, height: element.offsetHeight } : this.getHiddenElementDimensions(element);\n        let elementOuterHeight = elementDimensions.height;\n        let elementOuterWidth = elementDimensions.width;\n        let targetOuterHeight = target.offsetHeight;\n        let targetOuterWidth = target.offsetWidth;\n        let targetOffset = target.getBoundingClientRect();\n        let windowScrollTop = this.getWindowScrollTop();\n        let windowScrollLeft = this.getWindowScrollLeft();\n        let viewport = this.getViewport();\n        let top, left;\n        if (targetOffset.top + targetOuterHeight + elementOuterHeight > viewport.height) {\n            top = targetOffset.top + windowScrollTop - elementOuterHeight;\n            element.style.transformOrigin = 'bottom';\n            if (top < 0) {\n                top = windowScrollTop;\n            }\n        }\n        else {\n            top = targetOuterHeight + targetOffset.top + windowScrollTop;\n            element.style.transformOrigin = 'top';\n        }\n        if (targetOffset.left + elementOuterWidth > viewport.width)\n            left = Math.max(0, targetOffset.left + windowScrollLeft + targetOuterWidth - elementOuterWidth);\n        else\n            left = targetOffset.left + windowScrollLeft;\n        element.style.top = top + 'px';\n        element.style.left = left + 'px';\n    }\n    static getParents(element, parents = []) {\n        return element['parentNode'] === null ? parents : this.getParents(element.parentNode, parents.concat([element.parentNode]));\n    }\n    static getScrollableParents(element) {\n        let scrollableParents = [];\n        if (element) {\n            let parents = this.getParents(element);\n            const overflowRegex = /(auto|scroll)/;\n            const overflowCheck = (node) => {\n                let styleDeclaration = window['getComputedStyle'](node, null);\n                return overflowRegex.test(styleDeclaration.getPropertyValue('overflow')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowX')) || overflowRegex.test(styleDeclaration.getPropertyValue('overflowY'));\n            };\n            for (let parent of parents) {\n                let scrollSelectors = parent.nodeType === 1 && parent.dataset['scrollselectors'];\n                if (scrollSelectors) {\n                    let selectors = scrollSelectors.split(',');\n                    for (let selector of selectors) {\n                        let el = this.findSingle(parent, selector);\n                        if (el && overflowCheck(el)) {\n                            scrollableParents.push(el);\n                        }\n                    }\n                }\n                if (parent.nodeType !== 9 && overflowCheck(parent)) {\n                    scrollableParents.push(parent);\n                }\n            }\n        }\n        return scrollableParents;\n    }\n    static getHiddenElementOuterHeight(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementHeight = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementHeight;\n    }\n    static getHiddenElementOuterWidth(element) {\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        let elementWidth = element.offsetWidth;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return elementWidth;\n    }\n    static getHiddenElementDimensions(element) {\n        let dimensions = {};\n        element.style.visibility = 'hidden';\n        element.style.display = 'block';\n        dimensions.width = element.offsetWidth;\n        dimensions.height = element.offsetHeight;\n        element.style.display = 'none';\n        element.style.visibility = 'visible';\n        return dimensions;\n    }\n    static scrollInView(container, item) {\n        let borderTopValue = getComputedStyle(container).getPropertyValue('borderTopWidth');\n        let borderTop = borderTopValue ? parseFloat(borderTopValue) : 0;\n        let paddingTopValue = getComputedStyle(container).getPropertyValue('paddingTop');\n        let paddingTop = paddingTopValue ? parseFloat(paddingTopValue) : 0;\n        let containerRect = container.getBoundingClientRect();\n        let itemRect = item.getBoundingClientRect();\n        let offset = (itemRect.top + document.body.scrollTop) - (containerRect.top + document.body.scrollTop) - borderTop - paddingTop;\n        let scroll = container.scrollTop;\n        let elementHeight = container.clientHeight;\n        let itemHeight = this.getOuterHeight(item);\n        if (offset < 0) {\n            container.scrollTop = scroll + offset;\n        }\n        else if ((offset + itemHeight) > elementHeight) {\n            container.scrollTop = scroll + offset - elementHeight + itemHeight;\n        }\n    }\n    static fadeIn(element, duration) {\n        element.style.opacity = 0;\n        let last = +new Date();\n        let opacity = 0;\n        let tick = function () {\n            opacity = +element.style.opacity.replace(\",\", \".\") + (new Date().getTime() - last) / duration;\n            element.style.opacity = opacity;\n            last = +new Date();\n            if (+opacity < 1) {\n                (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n            }\n        };\n        tick();\n    }\n    static fadeOut(element, ms) {\n        var opacity = 1, interval = 50, duration = ms, gap = interval / duration;\n        let fading = setInterval(() => {\n            opacity = opacity - gap;\n            if (opacity <= 0) {\n                opacity = 0;\n                clearInterval(fading);\n            }\n            element.style.opacity = opacity;\n        }, interval);\n    }\n    static getWindowScrollTop() {\n        let doc = document.documentElement;\n        return (window.pageYOffset || doc.scrollTop) - (doc.clientTop || 0);\n    }\n    static getWindowScrollLeft() {\n        let doc = document.documentElement;\n        return (window.pageXOffset || doc.scrollLeft) - (doc.clientLeft || 0);\n    }\n    static matches(element, selector) {\n        var p = Element.prototype;\n        var f = p['matches'] || p.webkitMatchesSelector || p['mozMatchesSelector'] || p['msMatchesSelector'] || function (s) {\n            return [].indexOf.call(document.querySelectorAll(s), this) !== -1;\n        };\n        return f.call(element, selector);\n    }\n    static getOuterWidth(el, margin) {\n        let width = el.offsetWidth;\n        if (margin) {\n            let style = getComputedStyle(el);\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n        }\n        return width;\n    }\n    static getHorizontalPadding(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n    }\n    static getHorizontalMargin(el) {\n        let style = getComputedStyle(el);\n        return parseFloat(style.marginLeft) + parseFloat(style.marginRight);\n    }\n    static innerWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width += parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static width(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight);\n        return width;\n    }\n    static getInnerHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height += parseFloat(style.paddingTop) + parseFloat(style.paddingBottom);\n        return height;\n    }\n    static getOuterHeight(el, margin) {\n        let height = el.offsetHeight;\n        if (margin) {\n            let style = getComputedStyle(el);\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\n        }\n        return height;\n    }\n    static getHeight(el) {\n        let height = el.offsetHeight;\n        let style = getComputedStyle(el);\n        height -= parseFloat(style.paddingTop) + parseFloat(style.paddingBottom) + parseFloat(style.borderTopWidth) + parseFloat(style.borderBottomWidth);\n        return height;\n    }\n    static getWidth(el) {\n        let width = el.offsetWidth;\n        let style = getComputedStyle(el);\n        width -= parseFloat(style.paddingLeft) + parseFloat(style.paddingRight) + parseFloat(style.borderLeftWidth) + parseFloat(style.borderRightWidth);\n        return width;\n    }\n    static getViewport() {\n        let win = window, d = document, e = d.documentElement, g = d.getElementsByTagName('body')[0], w = win.innerWidth || e.clientWidth || g.clientWidth, h = win.innerHeight || e.clientHeight || g.clientHeight;\n        return { width: w, height: h };\n    }\n    static getOffset(el) {\n        var rect = el.getBoundingClientRect();\n        return {\n            top: rect.top + (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0),\n            left: rect.left + (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0),\n        };\n    }\n    static replaceElementWith(element, replacementElement) {\n        let parentNode = element.parentNode;\n        if (!parentNode)\n            throw `Can't replace element`;\n        return parentNode.replaceChild(replacementElement, element);\n    }\n    static getUserAgent() {\n        return navigator.userAgent;\n    }\n    static isIE() {\n        var ua = window.navigator.userAgent;\n        var msie = ua.indexOf('MSIE ');\n        if (msie > 0) {\n            // IE 10 or older => return version number\n            return true;\n        }\n        var trident = ua.indexOf('Trident/');\n        if (trident > 0) {\n            // IE 11 => return version number\n            var rv = ua.indexOf('rv:');\n            return true;\n        }\n        var edge = ua.indexOf('Edge/');\n        if (edge > 0) {\n            // Edge (IE 12+) => return version number\n            return true;\n        }\n        // other browser\n        return false;\n    }\n    static isIOS() {\n        return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window['MSStream'];\n    }\n    static isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    static appendChild(element, target) {\n        if (this.isElement(target))\n            target.appendChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.appendChild(element);\n        else\n            throw 'Cannot append ' + target + ' to ' + element;\n    }\n    static removeChild(element, target) {\n        if (this.isElement(target))\n            target.removeChild(element);\n        else if (target.el && target.el.nativeElement)\n            target.el.nativeElement.removeChild(element);\n        else\n            throw 'Cannot remove ' + element + ' from ' + target;\n    }\n    static removeElement(element) {\n        if (!('remove' in Element.prototype))\n            element.parentNode.removeChild(element);\n        else\n            element.remove();\n    }\n    static isElement(obj) {\n        return (typeof HTMLElement === \"object\" ? obj instanceof HTMLElement :\n            obj && typeof obj === \"object\" && obj !== null && obj.nodeType === 1 && typeof obj.nodeName === \"string\");\n    }\n    static calculateScrollbarWidth(el) {\n        if (el) {\n            let style = getComputedStyle(el);\n            return (el.offsetWidth - el.clientWidth - parseFloat(style.borderLeftWidth) - parseFloat(style.borderRightWidth));\n        }\n        else {\n            if (this.calculatedScrollbarWidth !== null)\n                return this.calculatedScrollbarWidth;\n            let scrollDiv = document.createElement(\"div\");\n            scrollDiv.className = \"p-scrollbar-measure\";\n            document.body.appendChild(scrollDiv);\n            let scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            document.body.removeChild(scrollDiv);\n            this.calculatedScrollbarWidth = scrollbarWidth;\n            return scrollbarWidth;\n        }\n    }\n    static calculateScrollbarHeight() {\n        if (this.calculatedScrollbarHeight !== null)\n            return this.calculatedScrollbarHeight;\n        let scrollDiv = document.createElement(\"div\");\n        scrollDiv.className = \"p-scrollbar-measure\";\n        document.body.appendChild(scrollDiv);\n        let scrollbarHeight = scrollDiv.offsetHeight - scrollDiv.clientHeight;\n        document.body.removeChild(scrollDiv);\n        this.calculatedScrollbarWidth = scrollbarHeight;\n        return scrollbarHeight;\n    }\n    static invokeElementMethod(element, methodName, args) {\n        element[methodName].apply(element, args);\n    }\n    static clearSelection() {\n        if (window.getSelection) {\n            if (window.getSelection().empty) {\n                window.getSelection().empty();\n            }\n            else if (window.getSelection().removeAllRanges && window.getSelection().rangeCount > 0 && window.getSelection().getRangeAt(0).getClientRects().length > 0) {\n                window.getSelection().removeAllRanges();\n            }\n        }\n        else if (document['selection'] && document['selection'].empty) {\n            try {\n                document['selection'].empty();\n            }\n            catch (error) {\n                //ignore IE bug\n            }\n        }\n    }\n    static getBrowser() {\n        if (!this.browser) {\n            let matched = this.resolveUserAgent();\n            this.browser = {};\n            if (matched.browser) {\n                this.browser[matched.browser] = true;\n                this.browser['version'] = matched.version;\n            }\n            if (this.browser['chrome']) {\n                this.browser['webkit'] = true;\n            }\n            else if (this.browser['webkit']) {\n                this.browser['safari'] = true;\n            }\n        }\n        return this.browser;\n    }\n    static resolveUserAgent() {\n        let ua = navigator.userAgent.toLowerCase();\n        let match = /(chrome)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(webkit)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec(ua) ||\n            /(msie) ([\\w.]+)/.exec(ua) ||\n            ua.indexOf(\"compatible\") < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua) ||\n            [];\n        return {\n            browser: match[1] || \"\",\n            version: match[2] || \"0\"\n        };\n    }\n    static isInteger(value) {\n        if (Number.isInteger) {\n            return Number.isInteger(value);\n        }\n        else {\n            return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n        }\n    }\n    static isHidden(element) {\n        return element.offsetParent === null;\n    }\n    static getFocusableElements(element) {\n        let focusableElements = DomHandler.find(element, `button:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [href][clientHeight][clientWidth]:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                input:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), select:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                textarea:not([tabindex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]), [tabIndex]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden]),\n                [contenteditable]:not([tabIndex = \"-1\"]):not([disabled]):not([style*=\"display:none\"]):not([hidden])`);\n        let visibleFocusableElements = [];\n        for (let focusableElement of focusableElements) {\n            if (getComputedStyle(focusableElement).display != \"none\" && getComputedStyle(focusableElement).visibility != \"hidden\")\n                visibleFocusableElements.push(focusableElement);\n        }\n        return visibleFocusableElements;\n    }\n    static generateZIndex() {\n        this.zindex = this.zindex || 999;\n        return ++this.zindex;\n    }\n}\nDomHandler.zindex = 1000;\nDomHandler.calculatedScrollbarWidth = null;\nDomHandler.calculatedScrollbarHeight = null;\n\nclass ConnectedOverlayScrollHandler {\n    constructor(element, listener = () => { }) {\n        this.element = element;\n        this.listener = listener;\n    }\n    bindScrollListener() {\n        this.scrollableParents = DomHandler.getScrollableParents(this.element);\n        for (let i = 0; i < this.scrollableParents.length; i++) {\n            this.scrollableParents[i].addEventListener('scroll', this.listener);\n        }\n    }\n    unbindScrollListener() {\n        if (this.scrollableParents) {\n            for (let i = 0; i < this.scrollableParents.length; i++) {\n                this.scrollableParents[i].removeEventListener('scroll', this.listener);\n            }\n        }\n    }\n    destroy() {\n        this.unbindScrollListener();\n        this.element = null;\n        this.listener = null;\n        this.scrollableParents = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConnectedOverlayScrollHandler, DomHandler };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}